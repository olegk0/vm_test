DBG {0x1} #2 NewLine, code offs: 3 
DBG #2 cmd CONST , code offs: 3 
DBG {0x1} #4 NewLine, code offs: 6 
DBG #4 cmd CHAR , code offs: 6 
DBG #4 Part 8 , code offs: 6 
PUSH_PNT {0x1B} offs: 0 type: 96 ( #4_arr26 )
ALLOC {0x12} offs: 0 size: 12 ( TEXT0 )
LOAD_BYTE {0x23} offs: 0 (TEXT0 ), byte: 11 
COPY_TO_bARRAY {0x24} offs: 0 ( TEXT0 )
DBG {0x1} #5 NewLine, code offs: 22 
DBG #5 cmd BYTE , code offs: 22 
ALLOC {0x12} offs: 12 size: 11 ( BYTE_ARR1 )
LOAD_BYTE {0x23} offs: 12 (BYTE_ARR1 ), byte: 10 
DBG {0x1} #6 NewLine, code offs: 31 
DBG #6 cmd BYTE , code offs: 31 
DBG #6 Part 8 , code offs: 31 
PUSH_PNT {0x1B} offs: 12 type: 80 ( #6_arr24 )
ALLOC {0x12} offs: 23 size: 4 ( BYTE_ARR2 )
LOAD_BYTE {0x23} offs: 23 (BYTE_ARR2 ), byte: 3 
COPY_TO_bARRAY {0x24} offs: 23 ( BYTE_ARR2 )
DBG {0x1} #7 NewLine, code offs: 47 
DBG #7 cmd VAR , code offs: 47 
ALLOC {0x12} offs: 27 size: 21 ( VAR_ARR1 )
LOAD_BYTE {0x23} offs: 27 (VAR_ARR1 ), byte: 5 
DBG {0x1} #8 NewLine, code offs: 56 
DBG #8 cmd VAR , code offs: 56 
DBG #8 Part 8 , code offs: 56 
PUSH_PNT {0x1B} offs: 16 type: 64 ( #8_arr29 )
ALLOC {0x12} offs: 48 size: 13 ( VAR_ARR2 )
LOAD_BYTE {0x23} offs: 48 (VAR_ARR2 ), byte: 3 
COPY_TO_gARRAY {0x25} offs: 48 ( VAR_ARR2 )
DBG {0x1} #11 NewLine, code offs: 72 
DBG #11 cmd VAR , code offs: 72 
ALLOC {0x12} offs: 61 size: 4 ( SINGLE_VAR1 )
DBG {0x1} #12 NewLine, code offs: 77 
DBG #12 cmd VAR , code offs: 77 
ALLOC {0x12} offs: 65 size: 4 ( SINGLE_VAR2 )
DBG #12 Part 2 , code offs: 79 
PUSH_NUM {0x1A} 2 
PUSH INV {0xF} (NUM) 2 
POP_VAR {0x20} offs: 65 ( SINGLE_VAR2 )
DBG {0x1} #14 NewLine, code offs: 91 
DBG #14 cmd FUNC , code offs: 91 
DBG #14 name FUNC1 , code offs: 91 
DBG #14 Begin sub: FUNC1 , code offs: 0 
DBG {0x1} #16 NewLine, code offs: 3 
DBG #16 Part 8 , code offs: 3 
PUSH_PNT {0x1B} offs: 29 type: 96 ( #16_arr13 )
CALL_INT_FUNC {0x27} 2 
DBG {0x1} #17 NewLine, code offs: 12 
DBG #17 cmd  , code offs: 12 
RET {0x2B} 
DBG #17 End sub: FUNC1 , code offs: 91 
DBG {0x1} #19 NewLine, code offs: 94 
DBG #19 cmd FUNC , code offs: 94 
DBG #19 name FUNC2 , code offs: 94 
DBG #19 Begin sub: FUNC2 , code offs: 13 
ALLOC MOD {0x92} offs: 0 size: 4 ( VNUM )
ALLOC MOD {0x92} offs: 4 size: 4 ( VAL1 )
ALLOC MOD {0x92} offs: 8 size: 4 ( VAL2 )
POP_VAR MOD {0xA0} offs: 8 ( VAL2 )
POP_VAR MOD {0xA0} offs: 4 ( VAL1 )
POP_VAR MOD {0xA0} offs: 0 ( VNUM )
DBG {0x1} #20 NewLine, code offs: 31 
CALL_PRG_FUNC {0x28} offset: 0 
POP_TO_NOWHERE {0x1E} 
DBG {0x1} #21 NewLine, code offs: 38 
DBG #21 cmd PRINT_LN , code offs: 38 
DBG #21 Part 2 , code offs: 38 
PUSH_VAR MOD {0x99} offs: 0 ( VNUM )
DBG #21 Part 8 , code offs: 41 
PUSH_PNT {0x1B} offs: 35 type: 96 ( #21_arr19 )
DBG #21 Part 2 , code offs: 45 
PUSH_VAR MOD {0x99} offs: 4 ( VAL1 )
DBG #21 Part 8 , code offs: 48 
PUSH_PNT {0x1B} offs: 38 type: 96 ( #21_arr32 )
DBG #21 Part 2 , code offs: 52 
PUSH_VAR MOD {0x99} offs: 8 ( VAL2 )
PUSH_PNT {0x1B} inline: 164482 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #23 NewLine, code offs: 64 
DBG #23 cmd  , code offs: 64 
FREE MOD {0x94} offs: 12 size: 4 ( VAL2 )
FREE MOD {0x94} offs: 8 size: 4 ( VAL1 )
FREE MOD {0x94} offs: 4 size: 4 ( VNUM )
RET {0x2B} 
DBG #23 End sub: FUNC2 , code offs: 94 
DBG {0x1} #25 NewLine, code offs: 97 
DBG #25 cmd PRINT_LN , code offs: 97 
DBG #25 Part 8 , code offs: 97 
PUSH_PNT {0x1B} offs: 43 type: 96 ( #25_arr26 )
DBG #25 Part 2 , code offs: 101 
PUSH_NUM {0x1A} 12 
PUSH_PNT {0x1B} inline: 130 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #26 NewLine, code offs: 115 
DBG #26 Part 8 , code offs: 115 
PUSH_PNT {0x1B} offs: 59 type: 96 ( #26_arr22 )
CALL_INT_FUNC {0x27} 2 
DBG {0x1} #27 NewLine, code offs: 124 
DBG #27 Part 8 , code offs: 124 
PUSH_PNT {0x1B} offs: 23 ( BYTE_ARR2 ) type: 32 
CALL_INT_FUNC {0x27} 2 
DBG {0x1} #28 NewLine, code offs: 133 
DBG #28 Part 8 , code offs: 133 
PUSH_PNT {0x1B} offs: 75 type: 96 ( #28_arr20 )
CALL_INT_FUNC {0x27} 2 
DBG {0x1} #29 NewLine, code offs: 142 
DBG #29 Part 8 , code offs: 142 
PUSH_PNT {0x1B} offs: 0 ( TEXT0 ) type: 48 
CALL_INT_FUNC {0x27} 2 
DBG {0x1} #31 NewLine, code offs: 151 
DBG #31 cmd PRINT_LN , code offs: 151 
DBG #31 Part 8 , code offs: 151 
PUSH_PNT {0x1B} offs: 89 type: 96 ( #31_arr28 )
DBG #31 Part 8 , code offs: 155 
PUSH_PNT {0x1B} offs: 23 ( BYTE_ARR2 ) type: 32 
PUSH_PNT {0x1B} inline: 136 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #33 NewLine, code offs: 168 
DBG #33 cmd PRINT_LN , code offs: 168 
DBG #33 Part 8 , code offs: 168 
PUSH_PNT {0x1B} offs: 107 type: 96 ( #33_arr25 )
DBG #33 Part 8 , code offs: 172 
PUSH_PNT {0x1B} offs: 48 ( VAR_ARR2 ) type: 16 
PUSH_PNT {0x1B} inline: 136 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #34 NewLine, code offs: 185 
DBG #34 cmd PRINT_LN , code offs: 185 
DBG #34 Part 8 , code offs: 185 
PUSH_PNT {0x1B} offs: 122 type: 96 ( #34_arr28 )
DBG #34 Part 2 , code offs: 189 
PUSH_VAR {0x19} offs: 65 ( SINGLE_VAR2 )
PUSH_PNT {0x1B} inline: 130 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #35 NewLine, code offs: 201 
DBG #35 Part 2 , code offs: 201 
PUSH_VAR {0x19} offs: 65 ( SINGLE_VAR2 )
DBG #35 Part 2 , code offs: 204 
PUSH_NUM {0x1A} 4 
PUSH PLUS {0x6} (NUM) 4 
DBG #35 Part 2 , code offs: 210 
PUSH_NUM {0x1A} 2 
PUSH DIV {0x5} (NUM) 2 
DBG #35 Part 2 , code offs: 216 
PUSH_NUM {0x1A} 5 
PUSH MUL {0x4} (NUM) 5 
DBG #35 Part 2 , code offs: 222 
PUSH_NUM {0x1A} 2 
PUSH MINUS {0x7} (NUM) 2 
POP_VAR {0x20} offs: 61 ( SINGLE_VAR1 )
DBG {0x1} #38 NewLine, code offs: 234 
DBG #38 Part 2 , code offs: 234 
PUSH_NUM {0x1A} 1 
DBG #38 Part 2 , code offs: 239 
PUSH_VAR {0x19} offs: 61 ( SINGLE_VAR1 )
DBG #38 Part 2 , code offs: 242 
PUSH_NUM {0x1A} 4 
CALL_PRG_FUNC {0x28} offset: 13 
POP_TO_NOWHERE {0x1E} 
DBG {0x1} #39 NewLine, code offs: 254 
DBG #39 Part 2 , code offs: 254 
PUSH_NUM {0x1A} 2 
DBG #39 Part 8 , code offs: 259 
PUSH_PNT {0x1B} offs: 48 ( VAR_ARR2 ) type: 16 
CALL_INT_FUNC {0x27} 131 
DBG #39 Part 2 , code offs: 265 
PUSH_NUM {0x1A} 3 
CALL_PRG_FUNC {0x28} offset: 13 
POP_TO_NOWHERE {0x1E} 
DBG {0x1} #40 NewLine, code offs: 277 
DBG #40 Part 2 , code offs: 277 
PUSH_NUM {0x1A} 3 
DBG #40 Part 8 , code offs: 282 
PUSH_PNT {0x1B} offs: 0 ( TEXT0 ) type: 48 
CALL_INT_FUNC {0x27} 131 
DBG #40 Part 2 , code offs: 288 
PUSH_NUM {0x1A} 11 
CALL_PRG_FUNC {0x28} offset: 13 
POP_TO_NOWHERE {0x1E} 
DBG {0x1} #42 NewLine, code offs: 300 
DBG #42 Part 2 , code offs: 300 
PUSH_VAR {0x19} offs: 53 ( VAR_ARR2 )
POP_VAR {0x20} offs: 61 ( SINGLE_VAR1 )
DBG {0x1} #43 NewLine, code offs: 309 
DBG #43 cmd PRINT_LN , code offs: 309 
DBG #43 Part 8 , code offs: 309 
PUSH_PNT {0x1B} offs: 140 type: 96 ( #43_arr28 )
DBG #43 Part 2 , code offs: 313 
PUSH_VAR {0x19} offs: 61 ( SINGLE_VAR1 )
PUSH_PNT {0x1B} inline: 130 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #45 NewLine, code offs: 325 
DBG #45 Part 8 , code offs: 325 
PUSH_PNT {0x1B} offs: 48 ( VAR_ARR2 ) type: 16 
COPY_TO_gARRAY {0x25} offs: 27 ( VAR_ARR1 )
DBG {0x1} #46 NewLine, code offs: 335 
DBG #46 cmd PRINT_LN , code offs: 335 
DBG #46 Part 8 , code offs: 335 
PUSH_PNT {0x1B} offs: 158 type: 96 ( #46_arr34 )
DBG #46 Part 8 , code offs: 339 
PUSH_PNT {0x1B} offs: 27 ( VAR_ARR1 ) type: 16 
PUSH_PNT {0x1B} inline: 136 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #48 NewLine, code offs: 352 
DBG #48 Part 8 , code offs: 352 
PUSH_PNT {0x1B} offs: 48 ( VAR_ARR2 ) type: 16 
COPY_TO_bARRAY {0x24} offs: 12 ( BYTE_ARR1 )
DBG {0x1} #49 NewLine, code offs: 362 
DBG #49 cmd PRINT_LN , code offs: 362 
DBG #49 Part 8 , code offs: 362 
PUSH_PNT {0x1B} offs: 182 type: 96 ( #49_arr35 )
DBG #49 Part 8 , code offs: 366 
PUSH_PNT {0x1B} offs: 12 ( BYTE_ARR1 ) type: 32 
PUSH_PNT {0x1B} inline: 136 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #51 NewLine, code offs: 379 
DBG #51 Part 8 , code offs: 379 
PUSH_PNT {0x1B} offs: 12 ( BYTE_ARR1 ) type: 32 
COPY_TO_gARRAY {0x25} offs: 48 ( VAR_ARR2 )
DBG {0x1} #52 NewLine, code offs: 389 
DBG #52 cmd PRINT_LN , code offs: 389 
DBG #52 Part 8 , code offs: 389 
PUSH_PNT {0x1B} offs: 207 type: 96 ( #52_arr35 )
DBG #52 Part 8 , code offs: 393 
PUSH_PNT {0x1B} offs: 48 ( VAR_ARR2 ) type: 16 
PUSH_PNT {0x1B} inline: 136 type: 0 
CALL_INT_PROC {0x26} 2 
END {0x3} 