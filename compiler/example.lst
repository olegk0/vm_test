DBG {0x1} #1 NewLine, code offs: 3 
DBG #1 cmd CONST , code offs: 3 
DBG {0x1} #2 NewLine, code offs: 6 
DBG #2 cmd CONST , code offs: 6 
DBG {0x1} #3 NewLine, code offs: 9 
DBG #3 cmd CONST , code offs: 9 
DBG {0x1} #4 NewLine, code offs: 12 
DBG #4 cmd CONST , code offs: 12 
DBG {0x1} #5 NewLine, code offs: 15 
DBG #5 cmd CONST , code offs: 15 
DBG {0x1} #7 NewLine, code offs: 18 
DBG #7 cmd BYTE , code offs: 18 
ALLOC {0x12} offs: 0 size: 101 ( SNAKE_X )
LOAD_BYTE {0x21} offs: 0 (SNAKE_X ), byte: 100 
DBG {0x1} #8 NewLine, code offs: 27 
DBG #8 cmd BYTE , code offs: 27 
ALLOC {0x12} offs: 101 size: 101 ( SNAKE_Y )
LOAD_BYTE {0x21} offs: 101 (SNAKE_Y ), byte: 100 
DBG {0x1} #9 NewLine, code offs: 36 
DBG #9 cmd VAR , code offs: 36 
ALLOC {0x12} offs: 202 size: 4 ( SNAKE_SIZE )
DBG {0x1} #10 NewLine, code offs: 41 
DBG #10 cmd VAR , code offs: 41 
ALLOC {0x12} offs: 206 size: 4 ( SNAKE_DIR )
DBG {0x1} #12 NewLine, code offs: 46 
DBG #12 cmd FUNC , code offs: 46 
DBG #12 name PRINT_SNAKE , code offs: 46 
DBG #12 Begin sub: PRINT_SNAKE , code offs: 0 
ALLOC MOD {0x92} offs: 0 size: 4 ( TT )
POP_VAR MOD {0x9E} offs: 0 ( TT )
DBG {0x1} #14 NewLine, code offs: 8 
DBG #14 cmd VAR , code offs: 8 
ALLOC MOD {0x92} offs: 4 size: 4 ( NEW_X )
PUSH_BYTE {0x16} offs: 1 ( SNAKE_X )
POP_VAR MOD {0x9E} offs: 4 ( NEW_X )
DBG {0x1} #15 NewLine, code offs: 19 
DBG #15 cmd VAR , code offs: 19 
ALLOC MOD {0x92} offs: 8 size: 4 ( NEW_Y )
PUSH_BYTE {0x16} offs: 102 ( SNAKE_Y )
POP_VAR MOD {0x9E} offs: 8 ( NEW_Y )
DBG {0x1} #16 NewLine, code offs: 30 
DBG #16 cmd IF , code offs: 30 
PUSH_VAR {0x17} offs: 206 ( SNAKE_DIR )
PUSH_NUM {0x18} 3 
PUSH EQ {0x10} (NUM) 3 
JMP_POP_CMPZ {0x15} Label: 1 (line -1 )
DBG {0x1} #17 NewLine, code offs: 45 
PUSH_VAR MOD {0x97} offs: 4 ( NEW_X )
PUSH_NUM {0x18} 1 
PUSH MINUS {0x7} (NUM) 1 
POP_VAR MOD {0x9E} offs: 4 ( NEW_X )
DBG {0x1} #18 NewLine, code offs: 60 
DBG #18 cmd  , code offs: 60 
JMP {0x14} Label: 2 (line -1 )
DBG #18 Label: 1 , code offs: 63 
DBG #18 cmd Else , code offs: 63 
DBG #18 cmd IF , code offs: 63 
PUSH_VAR {0x17} offs: 206 ( SNAKE_DIR )
PUSH_NUM {0x18} 1 
PUSH EQ {0x10} (NUM) 1 
JMP_POP_CMPZ {0x15} Label: 3 (line -1 )
DBG {0x1} #19 NewLine, code offs: 78 
PUSH_VAR MOD {0x97} offs: 8 ( NEW_Y )
PUSH_NUM {0x18} 1 
PUSH MINUS {0x7} (NUM) 1 
POP_VAR MOD {0x9E} offs: 8 ( NEW_Y )
DBG {0x1} #20 NewLine, code offs: 93 
DBG #20 cmd  , code offs: 93 
JMP {0x14} Label: 2 (line -1 )
DBG #20 Label: 3 , code offs: 96 
DBG #20 cmd Else , code offs: 96 
DBG #20 cmd IF , code offs: 96 
PUSH_VAR {0x17} offs: 206 ( SNAKE_DIR )
PUSH_NUM {0x18} 2 
PUSH EQ {0x10} (NUM) 2 
JMP_POP_CMPZ {0x15} Label: 4 (line -1 )
DBG {0x1} #21 NewLine, code offs: 111 
PUSH_VAR MOD {0x97} offs: 8 ( NEW_Y )
PUSH_NUM {0x18} 1 
PUSH PLUS {0x6} (NUM) 1 
POP_VAR MOD {0x9E} offs: 8 ( NEW_Y )
DBG {0x1} #22 NewLine, code offs: 126 
DBG #22 cmd  , code offs: 126 
JMP {0x14} Label: 2 (line -1 )
DBG #22 Label: 4 , code offs: 129 
DBG #22 cmd Else , code offs: 129 
DBG #22 cmd IF , code offs: 129 
PUSH_VAR {0x17} offs: 206 ( SNAKE_DIR )
PUSH_NUM {0x18} 4 
PUSH EQ {0x10} (NUM) 4 
JMP_POP_CMPZ {0x15} Label: 5 (line -1 )
DBG {0x1} #23 NewLine, code offs: 144 
PUSH_VAR MOD {0x97} offs: 4 ( NEW_X )
PUSH_NUM {0x18} 1 
PUSH PLUS {0x6} (NUM) 1 
POP_VAR MOD {0x9E} offs: 4 ( NEW_X )
DBG {0x1} #24 NewLine, code offs: 159 
DBG #24 cmd  , code offs: 159 
DBG #24 Label: 2 , code offs: 159 
DBG #24 Label: 5 , code offs: 159 
DBG {0x1} #25 NewLine, code offs: 162 
PUSH_VAR MOD {0x97} offs: 4 ( NEW_X )
PUSH_VAR MOD {0x97} offs: 8 ( NEW_Y )
CALL_INT_FUNC {0x23} 9 
DBG {0x1} #26 NewLine, code offs: 173 
PUSH_NUM {0x18} 88 
CALL_INT_FUNC {0x23} 1 
DBG {0x1} #28 NewLine, code offs: 183 
DBG #28 cmd VAR , code offs: 183 
ALLOC MOD {0x92} offs: 12 size: 4 ( T )
PUSH_VAR {0x17} offs: 202 ( SNAKE_SIZE )
PUSH_NUM {0x18} 1 
PUSH MINUS {0x7} (NUM) 1 
POP_VAR MOD {0x9E} offs: 12 ( T )
DBG {0x1} #29 NewLine, code offs: 200 
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_bARRAY_BY_IDX {0x1A} offs: 0 ( SNAKE_X )
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_bARRAY_BY_IDX {0x1A} offs: 101 ( SNAKE_Y )
CALL_INT_FUNC {0x23} 9 
DBG {0x1} #30 NewLine, code offs: 217 
PUSH_NUM {0x18} 32 
CALL_INT_FUNC {0x23} 1 
DBG {0x1} #31 NewLine, code offs: 227 
DBG #31 cmd WHILE , code offs: 227 
DBG #31 Label: 7 , code offs: 227 
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_NUM {0x18} 0 
PUSH GT {0xB} (NUM) 0 
JMP_POP_CMPZ {0x15} Label: 6 (line -1 )
DBG {0x1} #32 NewLine, code offs: 242 
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_NUM {0x18} 1 
PUSH MINUS {0x7} (NUM) 1 
PUSH_bARRAY_BY_IDX {0x1A} offs: 0 ( SNAKE_X )
POP_bARRAY_BY_IDX {0x1F} offs: 0 ( SNAKE_X )
DBG {0x1} #33 NewLine, code offs: 263 
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_NUM {0x18} 1 
PUSH MINUS {0x7} (NUM) 1 
PUSH_bARRAY_BY_IDX {0x1A} offs: 101 ( SNAKE_Y )
POP_bARRAY_BY_IDX {0x1F} offs: 101 ( SNAKE_Y )
DBG {0x1} #35 NewLine, code offs: 284 
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_NUM {0x18} 1 
PUSH MINUS {0x7} (NUM) 1 
POP_VAR MOD {0x9E} offs: 12 ( T )
DBG {0x1} #36 NewLine, code offs: 299 
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_bARRAY_BY_IDX {0x1A} offs: 0 ( SNAKE_X )
PUSH_VAR MOD {0x97} offs: 12 ( T )
PUSH_bARRAY_BY_IDX {0x1A} offs: 101 ( SNAKE_Y )
CALL_INT_FUNC {0x23} 9 
DBG {0x1} #37 NewLine, code offs: 316 
PUSH_NUM {0x18} 35 
CALL_INT_FUNC {0x23} 1 
DBG {0x1} #38 NewLine, code offs: 326 
DBG #38 cmd  , code offs: 326 
JMP {0x14} Label: 7 (line 31 )
DBG #38 Label: 6 , code offs: 329 
DBG {0x1} #39 NewLine, code offs: 332 
PUSH_VAR MOD {0x97} offs: 4 ( NEW_X )
POP_BYTE {0x1D} offs: 1 ( SNAKE_X )
DBG {0x1} #40 NewLine, code offs: 341 
PUSH_VAR MOD {0x97} offs: 8 ( NEW_Y )
POP_BYTE {0x1D} offs: 102 ( SNAKE_Y )
DBG {0x1} #42 NewLine, code offs: 350 
DBG #42 cmd  , code offs: 350 
FREE MOD {0x93} offs: 16 size: 4 ( T )
FREE MOD {0x93} offs: 12 size: 4 ( NEW_Y )
FREE MOD {0x93} offs: 8 size: 4 ( NEW_X )
FREE MOD {0x93} offs: 4 size: 4 ( TT )
PUSH_NUM {0x18} 0 
RET {0x26} 
DBG #42 End sub: PRINT_SNAKE , code offs: 46 
DBG {0x1} #44 NewLine, code offs: 49 
DBG #44 cmd VAR , code offs: 49 
ALLOC {0x12} offs: 210 size: 4 ( SCR_WIDTH )
CALL_INT_FUNC {0x23} 132 
POP_VAR {0x1E} offs: 210 ( SCR_WIDTH )
DBG {0x1} #45 NewLine, code offs: 59 
DBG #45 cmd VAR , code offs: 59 
ALLOC {0x12} offs: 214 size: 4 ( SCR_HEIGHT )
CALL_INT_FUNC {0x23} 133 
POP_VAR {0x1E} offs: 214 ( SCR_HEIGHT )
DBG {0x1} #47 NewLine, code offs: 69 
PUSH_VAR {0x17} offs: 210 ( SCR_WIDTH )
PUSH_NUM {0x18} 2 
PUSH DIV {0x5} (NUM) 2 
POP_BYTE {0x1D} offs: 1 ( SNAKE_X )
DBG {0x1} #48 NewLine, code offs: 84 
PUSH_VAR {0x17} offs: 214 ( SCR_HEIGHT )
PUSH_NUM {0x18} 2 
PUSH DIV {0x5} (NUM) 2 
POP_BYTE {0x1D} offs: 102 ( SNAKE_Y )
DBG {0x1} #49 NewLine, code offs: 99 
PUSH_BYTE {0x16} offs: 1 ( SNAKE_X )
PUSH_NUM {0x18} 1 
PUSH MINUS {0x7} (NUM) 1 
POP_BYTE {0x1D} offs: 2 ( SNAKE_X )
DBG {0x1} #50 NewLine, code offs: 114 
PUSH_BYTE {0x16} offs: 102 ( SNAKE_Y )
POP_BYTE {0x1D} offs: 103 ( SNAKE_Y )
DBG {0x1} #51 NewLine, code offs: 123 
PUSH_NUM {0x18} 2 
POP_VAR {0x1E} offs: 202 ( SNAKE_SIZE )
DBG {0x1} #52 NewLine, code offs: 134 
PUSH_NUM {0x18} 1 
CALL_INT_FUNC {0x23} 129 
PUSH_NUM {0x18} 1 
PUSH PLUS {0x6} (NUM) 1 
POP_VAR {0x1E} offs: 206 ( SNAKE_DIR )
DBG {0x1} #54 NewLine, code offs: 153 
CALL_INT_FUNC {0x23} 8 
DBG {0x1} #57 NewLine, code offs: 158 
PUSH_PNT {0x19} offs: 0 type: 1 ( #57_arr32 )
CALL_INT_FUNC {0x23} 2 
DBG {0x1} #59 NewLine, code offs: 167 
DBG #59 cmd VAR , code offs: 167 
ALLOC {0x12} offs: 218 size: 4 ( KEY )
DBG {0x1} #61 NewLine, code offs: 172 
DBG #61 cmd WHILE , code offs: 172 
DBG #61 Label: 9 , code offs: 172 
DBG {0x1} #62 NewLine, code offs: 175 
PUSH_NUM {0x18} 1000 
CALL_INT_FUNC {0x23} 5 
DBG {0x1} #63 NewLine, code offs: 185 
PUSH_NUM {0x18} 0 
CALL_INT_FUNC {0x23} 130 
POP_VAR {0x1E} offs: 218 ( KEY )
DBG {0x1} #64 NewLine, code offs: 198 
DBG #64 cmd IF , code offs: 198 
PUSH_VAR {0x17} offs: 218 ( KEY )
PUSH_NUM {0x18} 98 
PUSH EQ {0x10} (NUM) 98 
JMP_POP_CMPZ {0x15} Label: 10 (line -1 )
DBG {0x1} #65 NewLine, code offs: 213 
DBG #65 cmd BREAK , code offs: 213 
JMP {0x14} Label: 8 (line -1 )
DBG {0x1} #66 NewLine, code offs: 219 
DBG #66 cmd  , code offs: 219 
JMP {0x14} Label: 11 (line -1 )
DBG #66 Label: 10 , code offs: 222 
DBG #66 cmd Else , code offs: 222 
DBG #66 cmd IF , code offs: 222 
PUSH_VAR {0x17} offs: 218 ( KEY )
PUSH_NUM {0x18} 97 
PUSH EQ {0x10} (NUM) 97 
JMP_POP_CMPZ {0x15} Label: 12 (line -1 )
DBG {0x1} #67 NewLine, code offs: 237 
PUSH_NUM {0x18} 3 
POP_VAR {0x1E} offs: 206 ( SNAKE_DIR )
DBG {0x1} #68 NewLine, code offs: 248 
DBG #68 cmd  , code offs: 248 
JMP {0x14} Label: 11 (line -1 )
DBG #68 Label: 12 , code offs: 251 
DBG #68 cmd Else , code offs: 251 
DBG #68 cmd IF , code offs: 251 
PUSH_VAR {0x17} offs: 218 ( KEY )
PUSH_NUM {0x18} 119 
PUSH EQ {0x10} (NUM) 119 
JMP_POP_CMPZ {0x15} Label: 13 (line -1 )
DBG {0x1} #69 NewLine, code offs: 266 
PUSH_NUM {0x18} 1 
POP_VAR {0x1E} offs: 206 ( SNAKE_DIR )
DBG {0x1} #70 NewLine, code offs: 277 
DBG #70 cmd  , code offs: 277 
JMP {0x14} Label: 11 (line -1 )
DBG #70 Label: 13 , code offs: 280 
DBG #70 cmd Else , code offs: 280 
DBG #70 cmd IF , code offs: 280 
PUSH_VAR {0x17} offs: 218 ( KEY )
PUSH_NUM {0x18} 115 
PUSH EQ {0x10} (NUM) 115 
JMP_POP_CMPZ {0x15} Label: 14 (line -1 )
DBG {0x1} #71 NewLine, code offs: 295 
PUSH_NUM {0x18} 2 
POP_VAR {0x1E} offs: 206 ( SNAKE_DIR )
DBG {0x1} #72 NewLine, code offs: 306 
DBG #72 cmd  , code offs: 306 
JMP {0x14} Label: 11 (line -1 )
DBG #72 Label: 14 , code offs: 309 
DBG #72 cmd Else , code offs: 309 
DBG #72 cmd IF , code offs: 309 
PUSH_VAR {0x17} offs: 218 ( KEY )
PUSH_NUM {0x18} 100 
PUSH EQ {0x10} (NUM) 100 
JMP_POP_CMPZ {0x15} Label: 15 (line -1 )
DBG {0x1} #73 NewLine, code offs: 324 
PUSH_NUM {0x18} 4 
POP_VAR {0x1E} offs: 206 ( SNAKE_DIR )
DBG {0x1} #74 NewLine, code offs: 335 
DBG #74 cmd  , code offs: 335 
JMP {0x14} Label: 11 (line -1 )
DBG #74 Label: 15 , code offs: 338 
DBG #74 cmd Else , code offs: 338 
DBG #74 cmd IF , code offs: 338 
PUSH_VAR {0x17} offs: 218 ( KEY )
PUSH_NUM {0x18} 105 
PUSH EQ {0x10} (NUM) 105 
JMP_POP_CMPZ {0x15} Label: 16 (line -1 )
DBG {0x1} #75 NewLine, code offs: 353 
PUSH_VAR {0x17} offs: 202 ( SNAKE_SIZE )
PUSH_NUM {0x18} 1 
PUSH PLUS {0x6} (NUM) 1 
POP_VAR {0x1E} offs: 202 ( SNAKE_SIZE )
DBG {0x1} #76 NewLine, code offs: 368 
DBG #76 cmd  , code offs: 368 
DBG #76 Label: 11 , code offs: 368 
DBG #76 Label: 16 , code offs: 368 
DBG {0x1} #78 NewLine, code offs: 371 
PUSH_NUM {0x18} 0 
CALL_PRG_FUNC {0x24} offset: 0 
POP_TO_NOWHERE {0x1C} 
DBG {0x1} #79 NewLine, code offs: 383 
DBG #79 cmd  , code offs: 383 
JMP {0x14} Label: 9 (line 61 )
DBG #79 Label: 8 , code offs: 386 
END {0x3} 