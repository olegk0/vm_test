DBG {0x1} #2 NewLine, code offs: 3 
DBG #2 cmd CONST , code offs: 3 
DBG {0x1} #3 NewLine, code offs: 6 
DBG #3 cmd CONST , code offs: 6 
DBG {0x1} #4 NewLine, code offs: 9 
DBG #4 cmd CONST , code offs: 9 
DBG {0x1} #6 NewLine, code offs: 12 
DBG #6 cmd FUNC , code offs: 12 
DBG #6 name FUNC0 , code offs: 12 
DBG #6 Begin sub: FUNC0 , code offs: 0 
DBG {0x1} #7 NewLine, code offs: 3 
DBG #7 cmd  , code offs: 3 
RET {0x2B} 
DBG #7 End sub: FUNC0 , code offs: 12 
DBG {0x1} #9 NewLine, code offs: 15 
DBG #9 cmd FUNC , code offs: 15 
DBG #9 name FUNC1 , code offs: 15 
DBG #9 Begin sub: FUNC1 , code offs: 4 
INIT_gVAR MOD {0x93} offs: 0 size: 0 e,  4 b( TNUM )
POP_VAR MOD {0x9F} offs: 0 ( TNUM )
DBG {0x1} #10 NewLine, code offs: 14 
DBG #10 cmd PRINT , code offs: 14 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #10 Part 8 , code offs: 18 
PUSH_VAR MOD {0x97} offs: 0 ( TNUM )
DBG #10 Part 2 , code offs: 21 
PUSH_OBJ_PNT {0x19} offs: 13 type: 96 ( #10_arr24 )
DBG #10 Part 8 , code offs: 25 
PUSH_OBJ_PNT {0x19} inline: 2088 type: 0 
CALL_INT_PROC {0x26} 1 
DBG {0x1} #11 NewLine, code offs: 34 
DBG #11 cmd  , code offs: 34 
RET {0x2B} 
DBG #11 End sub: FUNC1 , code offs: 15 
DBG {0x1} #13 NewLine, code offs: 18 
DBG #13 cmd FUNC , code offs: 18 
DBG #13 name FUNC2 , code offs: 18 
DBG #13 Begin sub: FUNC2 , code offs: 35 
INIT_gVAR MOD {0x93} offs: 0 size: 0 e,  4 b( TNUM )
INIT_gVAR MOD {0x93} offs: 4 size: 0 e,  4 b( VAL1 )
INIT_gVAR MOD {0x93} offs: 8 size: 0 e,  4 b( VAL2 )
POP_VAR MOD {0x9F} offs: 8 ( VAL2 )
POP_VAR MOD {0x9F} offs: 4 ( VAL1 )
POP_VAR MOD {0x9F} offs: 0 ( TNUM )
DBG {0x1} #14 NewLine, code offs: 59 
PUSH_VAR MOD {0x97} offs: 0 ( TNUM )
CALL_PRG_FUNC {0x28} offset: 4 
POP_TO_NOWHERE {0x1D} 
DBG {0x1} #15 NewLine, code offs: 69 
DBG #15 cmd PRINT , code offs: 69 
PUSH_OBJ_PNT {0x19} offs: 15 type: 96 ( #15_arr11 )
DBG #15 Part 8 , code offs: 73 
PUSH_VAR MOD {0x97} offs: 4 ( VAL1 )
DBG #15 Part 2 , code offs: 76 
PUSH_OBJ_PNT {0x19} offs: 18 type: 96 ( #15_arr24 )
DBG #15 Part 8 , code offs: 80 
PUSH_VAR MOD {0x97} offs: 8 ( VAL2 )
DBG #15 Part 2 , code offs: 83 
PUSH_OBJ_PNT {0x19} inline: 33410 type: 0 
CALL_INT_PROC {0x26} 1 
DBG {0x1} #17 NewLine, code offs: 92 
DBG #17 cmd  , code offs: 92 
RET {0x2B} 
DBG #17 End sub: FUNC2 , code offs: 18 
DBG {0x1} #19 NewLine, code offs: 21 
DBG #19 cmd FUNC , code offs: 21 
DBG #19 name POW , code offs: 21 
DBG #19 Begin sub: POW , code offs: 93 
INIT_gVAR MOD {0x93} offs: 0 size: 0 e,  4 b( BASE )
INIT_gVAR MOD {0x93} offs: 4 size: 0 e,  4 b( DEG )
POP_VAR MOD {0x9F} offs: 4 ( DEG )
POP_VAR MOD {0x9F} offs: 0 ( BASE )
DBG {0x1} #20 NewLine, code offs: 110 
DBG #20 cmd IF , code offs: 110 
PUSH_VAR MOD {0x97} offs: 4 ( DEG )
PUSH_NUM {0x18} 0 
PUSH GT {0xB} (NUM) 0 
JMP_POP_CMPZ {0x15} Label: 1 (line -1 )
DBG {0x1} #21 NewLine, code offs: 125 
DBG #21 cmd RETURN , code offs: 125 
PUSH_VAR MOD {0x97} offs: 0 ( BASE )
PUSH_VAR MOD {0x97} offs: 0 ( BASE )
PUSH_VAR MOD {0x97} offs: 4 ( DEG )
PUSH_NUM {0x18} 1 
PUSH MINUS {0x7} (NUM) 1 
CALL_PRG_FUNC {0x28} offset: 93 
PUSH MUL {0x4} (FUNC: POW )0 
RETVAL {0x2A} 
DBG {0x1} #22 NewLine, code offs: 148 
DBG #22 cmd  , code offs: 148 
JMP {0x14} Label: 2 (line -1 )
DBG #22 Label: 1 , code offs: 151 
DBG #22 cmd Else , code offs: 151 
DBG #22 cmd  , code offs: 151 
DBG {0x1} #23 NewLine, code offs: 154 
DBG #23 cmd RETURN , code offs: 154 
PUSH_NUM {0x18} 1 
RETVAL {0x2A} 
DBG {0x1} #24 NewLine, code offs: 163 
DBG #24 cmd  , code offs: 163 
DBG #24 Label: 2 , code offs: 163 
DBG {0x1} #25 NewLine, code offs: 166 
DBG #25 cmd  , code offs: 166 
RET {0x2B} 
DBG #25 End sub: POW , code offs: 21 
DBG {0x1} #27 NewLine, code offs: 24 
DBG #27 cmd FUNC , code offs: 24 
DBG #27 name POW0 , code offs: 24 
DBG #27 Begin sub: POW0 , code offs: 167 
INIT_gVAR MOD {0x93} offs: 0 size: 0 e,  4 b( BASE )
INIT_gVAR MOD {0x93} offs: 4 size: 0 e,  4 b( DEG )
POP_VAR MOD {0x9F} offs: 4 ( DEG )
POP_VAR MOD {0x9F} offs: 0 ( BASE )
DBG {0x1} #29 NewLine, code offs: 184 
DBG #29 cmd VAR , code offs: 184 
INIT_gVAR MOD {0x93} offs: 8 size: 0 e,  4 b( RET )
PUSH_NUM {0x18} 1 
POP_VAR MOD {0x9F} offs: 8 ( RET )
DBG {0x1} #30 NewLine, code offs: 199 
DBG #30 cmd WHILE , code offs: 199 
DBG #30 Label: 4 , code offs: 199 
PUSH_VAR MOD {0x97} offs: 4 ( DEG )
PUSH_NUM {0x18} 0 
PUSH GT {0xB} (NUM) 0 
JMP_POP_CMPZ {0x15} Label: 3 (line -1 )
DBG {0x1} #31 NewLine, code offs: 214 
PUSH_VAR MOD {0x97} offs: 8 ( RET )
PUSH_VAR MOD {0x97} offs: 0 ( BASE )
PUSH MUL {0x4} (VAR: BASE )0 
POP_VAR MOD {0x9F} offs: 8 ( RET )
DBG {0x1} #32 NewLine, code offs: 227 
PUSH_VAR MOD {0x97} offs: 4 ( DEG )
PUSH_NUM {0x18} 1 
PUSH MINUS {0x7} (NUM) 1 
POP_VAR MOD {0x9F} offs: 4 ( DEG )
DBG {0x1} #34 NewLine, code offs: 242 
DBG #34 cmd  , code offs: 242 
JMP {0x14} Label: 4 (line 30 )
DBG #34 Label: 3 , code offs: 245 
DBG {0x1} #35 NewLine, code offs: 248 
DBG #35 cmd RETURN , code offs: 248 
PUSH_VAR MOD {0x97} offs: 8 ( RET )
RETVAL {0x2A} 
DBG {0x1} #36 NewLine, code offs: 255 
DBG #36 cmd  , code offs: 255 
RET {0x2B} 
DBG #36 End sub: POW0 , code offs: 24 
DBG {0x1} #38 NewLine, code offs: 27 
DBG #38 cmd FUNC , code offs: 27 
DBG #38 name SIZE0 , code offs: 27 
DBG #38 Begin sub: SIZE0 , code offs: 256 
INIT_bVAR MOD {0x92} offs: 0 size: 2 e,  3 b( PNT )
POP_PNT MOD {0xA0} offs: 0 ( PNT )
DBG {0x1} #39 NewLine, code offs: 266 
DBG #39 cmd BRKPNT , code offs: 266 
BREAK {0x2} #39 
DBG {0x1} #40 NewLine, code offs: 272 
DBG #40 cmd RETURN , code offs: 272 
PUSH_PNT MOD {0x9A} offs: 0 ( PNT )
CALL_INT_FUNC {0x27} 131 
RETVAL {0x2A} 
DBG {0x1} #41 NewLine, code offs: 281 
DBG #41 cmd  , code offs: 281 
RET {0x2B} 
DBG #41 End sub: SIZE0 , code offs: 27 
DBG {0x1} #43 NewLine, code offs: 30 
DBG #43 cmd CHAR , code offs: 30 
PUSH_OBJ_PNT {0x19} offs: 23 type: 96 ( #43_arr26 )
INIT_bVAR {0x12} offs: 0 size: 11 e,  12 b( TEXT0 )
COPY_TO_bARRAY {0x24} offs: 0 ( TEXT0 )
DBG {0x1} #44 NewLine, code offs: 44 
DBG #44 cmd BYTE , code offs: 44 
INIT_bVAR {0x12} offs: 12 size: 10 e,  11 b( BYTE_ARR1 )
DBG {0x1} #45 NewLine, code offs: 51 
DBG #45 cmd BYTE , code offs: 51 
PUSH_OBJ_PNT {0x19} offs: 35 type: 80 ( #45_arr24 )
INIT_bVAR {0x12} offs: 23 size: 3 e,  4 b( BYTE_ARR2 )
COPY_TO_bARRAY {0x24} offs: 23 ( BYTE_ARR2 )
DBG {0x1} #46 NewLine, code offs: 65 
DBG #46 cmd VAR , code offs: 65 
INIT_gVAR {0x13} offs: 27 size: 5 e,  21 b( VAR_ARR1 )
DBG {0x1} #47 NewLine, code offs: 72 
DBG #47 cmd VAR , code offs: 72 
PUSH_OBJ_PNT {0x19} offs: 39 type: 64 ( #47_arr29 )
INIT_gVAR {0x13} offs: 48 size: 3 e,  13 b( VAR_ARR2 )
COPY_TO_gARRAY {0x25} offs: 48 ( VAR_ARR2 )
DBG {0x1} #49 NewLine, code offs: 86 
DBG #49 cmd VAR , code offs: 86 
INIT_gVAR {0x13} offs: 61 size: 0 e,  4 b( SINGLE_VAR1 )
DBG {0x1} #50 NewLine, code offs: 93 
DBG #50 cmd VAR , code offs: 93 
INIT_gVAR {0x13} offs: 65 size: 0 e,  4 b( SINGLE_VAR2 )
PUSH_NUM {0x18} 2 
PUSH INV {0xF} (NUM) 2 
POP_VAR {0x1F} offs: 65 ( SINGLE_VAR2 )
DBG {0x1} #51 NewLine, code offs: 109 
DBG #51 cmd BRKPNT , code offs: 109 
BREAK {0x2} #51 
DBG {0x1} #52 NewLine, code offs: 115 
PUSH_NUM {0x18} 1 
CALL_PRG_FUNC {0x28} offset: 4 
POP_TO_NOWHERE {0x1D} 
DBG {0x1} #53 NewLine, code offs: 127 
DBG #53 cmd BRKPNT , code offs: 127 
BREAK {0x2} #53 
DBG {0x1} #54 NewLine, code offs: 133 
DBG #54 cmd PRINT , code offs: 133 
PUSH_OBJ_PNT {0x19} offs: 52 type: 96 ( #54_arr16 )
DBG #54 Part 8 , code offs: 137 
DBG #54 Part 2 , code offs: 137 
PUSH_NUM {0x18} 12 
PUSH_OBJ_PNT {0x19} inline: 130 type: 0 
CALL_INT_PROC {0x26} 1 
DBG {0x1} #55 NewLine, code offs: 151 
DBG #55 cmd PRINT_LN , code offs: 151 
PUSH_OBJ_PNT {0x19} offs: 61 type: 96 ( #55_arr13 )
DBG #55 Part 8 , code offs: 155 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #55 Part 8 , code offs: 159 
PUSH_OBJ_PNT {0x19} offs: 64 type: 96 ( #55_arr34 )
DBG #55 Part 8 , code offs: 163 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #55 Part 8 , code offs: 167 
PUSH_OBJ_PNT {0x19} inline: 34952 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #56 NewLine, code offs: 176 
DBG #56 cmd PRINT_LN , code offs: 176 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #56 Part 8 , code offs: 180 
PUSH_OBJ_PNT {0x19} offs: 74 type: 96 ( #56_arr28 )
DBG #56 Part 8 , code offs: 184 
PUSH_OBJ_PNT {0x19} offs: 6 type: 80 ( CNT_ARR )
DBG #56 Part 8 , code offs: 188 
PUSH_OBJ_PNT {0x19} inline: 2184 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #58 NewLine, code offs: 197 
DBG #58 cmd PRINT , code offs: 197 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #58 Part 8 , code offs: 201 
PUSH_OBJ_PNT {0x19} offs: 83 type: 96 ( #58_arr24 )
DBG #58 Part 8 , code offs: 205 
PUSH_OBJ_PNT {0x19} offs: 0 ( TEXT0 ) type: 48 
DBG #58 Part 8 , code offs: 209 
PUSH_OBJ_PNT {0x19} offs: 91 type: 96 ( #58_arr41 )
DBG #58 Part 8 , code offs: 213 
PUSH_OBJ_PNT {0x19} offs: 0 ( TEXT0 ) type: 48 
CALL_INT_FUNC {0x27} 131 
DBG #58 Part 2 , code offs: 219 
PUSH_OBJ_PNT {0x19} inline: 559234 type: 0 
CALL_INT_PROC {0x26} 1 
DBG {0x1} #59 NewLine, code offs: 228 
DBG #59 cmd BRKPNT , code offs: 228 
BREAK {0x2} #59 
DBG {0x1} #60 NewLine, code offs: 234 
DBG #60 cmd PRINT_LN , code offs: 234 
PUSH_OBJ_PNT {0x19} offs: 100 type: 96 ( #60_arr13 )
DBG #60 Part 8 , code offs: 238 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #60 Part 8 , code offs: 242 
PUSH_OBJ_PNT {0x19} offs: 103 type: 96 ( #60_arr36 )
DBG #60 Part 8 , code offs: 246 
PUSH_OBJ_PNT {0x19} offs: 0 ( TEXT0 ) type: 48 
CALL_PRG_FUNC {0x28} offset: 256 
DBG #60 Part 2 , code offs: 253 
PUSH_OBJ_PNT {0x19} inline: 34946 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #62 NewLine, code offs: 262 
DBG #62 cmd PRINT_LN , code offs: 262 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #62 Part 8 , code offs: 266 
PUSH_OBJ_PNT {0x19} offs: 115 type: 96 ( #62_arr30 )
DBG #62 Part 8 , code offs: 270 
PUSH_OBJ_PNT {0x19} offs: 23 ( BYTE_ARR2 ) type: 32 
DBG #62 Part 8 , code offs: 274 
PUSH_OBJ_PNT {0x19} inline: 2184 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #63 NewLine, code offs: 283 
DBG #63 cmd PRINT_LN , code offs: 283 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #63 Part 8 , code offs: 287 
PUSH_OBJ_PNT {0x19} offs: 126 type: 96 ( #63_arr29 )
DBG #63 Part 8 , code offs: 291 
PUSH_OBJ_PNT {0x19} offs: 48 ( VAR_ARR2 ) type: 16 
DBG #63 Part 8 , code offs: 295 
PUSH_OBJ_PNT {0x19} inline: 2184 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #65 NewLine, code offs: 304 
DBG #65 cmd PRINT_LN , code offs: 304 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #65 Part 8 , code offs: 308 
PUSH_OBJ_PNT {0x19} offs: 136 type: 96 ( #65_arr32 )
DBG #65 Part 8 , code offs: 312 
PUSH_VAR {0x17} offs: 65 ( SINGLE_VAR2 )
DBG #65 Part 2 , code offs: 315 
PUSH_OBJ_PNT {0x19} inline: 2178 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #66 NewLine, code offs: 324 
PUSH_NUM {0x18} 10 
CALL_INT_FUNC {0x27} 1 
DBG {0x1} #67 NewLine, code offs: 334 
PUSH_VAR {0x17} offs: 65 ( SINGLE_VAR2 )
PUSH_NUM {0x18} 12 
PUSH PLUS {0x6} (NUM) 12 
PUSH_NUM {0x18} 2 
PUSH DIV {0x5} (NUM) 2 
PUSH_NUM {0x18} 5 
PUSH MUL {0x4} (NUM) 5 
PUSH_NUM {0x18} 20 
PUSH MINUS {0x7} (NUM) 20 
POP_VAR {0x1F} offs: 61 ( SINGLE_VAR1 )
DBG {0x1} #68 NewLine, code offs: 367 
PUSH_NUM {0x18} 1 
PUSH_VAR {0x17} offs: 61 ( SINGLE_VAR1 )
PUSH_NUM {0x18} 5 
CALL_PRG_FUNC {0x28} offset: 35 
POP_TO_NOWHERE {0x1D} 
DBG {0x1} #69 NewLine, code offs: 387 
PUSH_NUM {0x18} 59 
CALL_INT_FUNC {0x27} 1 
DBG {0x1} #70 NewLine, code offs: 397 
PUSH_NUM {0x18} 2 
PUSH_OBJ_PNT {0x19} offs: 48 ( VAR_ARR2 ) type: 16 
CALL_INT_FUNC {0x27} 131 
PUSH_NUM {0x18} 3 
CALL_PRG_FUNC {0x28} offset: 35 
POP_TO_NOWHERE {0x1D} 
DBG {0x1} #72 NewLine, code offs: 420 
PUSH_NUM {0x18} 3 
PUSH_OBJ_PNT {0x19} offs: 0 ( TEXT0 ) type: 48 
CALL_INT_FUNC {0x27} 131 
PUSH_NUM {0x18} 11 
CALL_PRG_FUNC {0x28} offset: 35 
POP_TO_NOWHERE {0x1D} 
DBG {0x1} #73 NewLine, code offs: 443 
PUSH_NUM {0x18} 59 
CALL_INT_FUNC {0x27} 1 
DBG {0x1} #74 NewLine, code offs: 453 
PUSH_VAR {0x17} offs: 53 ( VAR_ARR2 )
POP_VAR {0x1F} offs: 61 ( SINGLE_VAR1 )
DBG {0x1} #75 NewLine, code offs: 462 
DBG #75 cmd PRINT_LN , code offs: 462 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #75 Part 8 , code offs: 466 
PUSH_OBJ_PNT {0x19} offs: 149 type: 96 ( #75_arr32 )
DBG #75 Part 8 , code offs: 470 
PUSH_VAR {0x17} offs: 61 ( SINGLE_VAR1 )
DBG #75 Part 2 , code offs: 473 
PUSH_OBJ_PNT {0x19} inline: 2178 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #77 NewLine, code offs: 482 
PUSH_OBJ_PNT {0x19} offs: 6 type: 80 ( CNT_ARR )
COPY_TO_gARRAY {0x25} offs: 27 ( VAR_ARR1 )
DBG {0x1} #78 NewLine, code offs: 492 
DBG #78 cmd PRINT_LN , code offs: 492 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #78 Part 8 , code offs: 496 
PUSH_OBJ_PNT {0x19} offs: 162 type: 96 ( #78_arr37 )
DBG #78 Part 8 , code offs: 500 
PUSH_OBJ_PNT {0x19} offs: 27 ( VAR_ARR1 ) type: 16 
DBG #78 Part 8 , code offs: 504 
PUSH_OBJ_PNT {0x19} inline: 2184 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #80 NewLine, code offs: 513 
PUSH_OBJ_PNT {0x19} offs: 48 ( VAR_ARR2 ) type: 16 
COPY_TO_gARRAY {0x25} offs: 27 ( VAR_ARR1 )
DBG {0x1} #81 NewLine, code offs: 523 
DBG #81 cmd PRINT_LN , code offs: 523 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #81 Part 8 , code offs: 527 
PUSH_OBJ_PNT {0x19} offs: 180 type: 96 ( #81_arr38 )
DBG #81 Part 8 , code offs: 531 
PUSH_OBJ_PNT {0x19} offs: 27 ( VAR_ARR1 ) type: 16 
DBG #81 Part 8 , code offs: 535 
PUSH_OBJ_PNT {0x19} inline: 2184 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #83 NewLine, code offs: 544 
PUSH_OBJ_PNT {0x19} offs: 48 ( VAR_ARR2 ) type: 16 
COPY_TO_bARRAY {0x24} offs: 12 ( BYTE_ARR1 )
DBG {0x1} #84 NewLine, code offs: 554 
DBG #84 cmd PRINT_LN , code offs: 554 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #84 Part 8 , code offs: 558 
PUSH_OBJ_PNT {0x19} offs: 199 type: 96 ( #84_arr39 )
DBG #84 Part 8 , code offs: 562 
PUSH_OBJ_PNT {0x19} offs: 12 ( BYTE_ARR1 ) type: 32 
DBG #84 Part 8 , code offs: 566 
PUSH_OBJ_PNT {0x19} inline: 2184 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #86 NewLine, code offs: 575 
PUSH_NUM {0x18} 100 
POP_BYTE {0x1E} offs: 13 ( BYTE_ARR1 )
DBG {0x1} #87 NewLine, code offs: 586 
DBG #87 cmd PRINT_LN , code offs: 586 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #87 Part 8 , code offs: 590 
PUSH_OBJ_PNT {0x19} offs: 219 type: 96 ( #87_arr37 )
DBG #87 Part 8 , code offs: 594 
PUSH_OBJ_PNT {0x19} offs: 12 ( BYTE_ARR1 ) type: 32 
DBG #87 Part 8 , code offs: 598 
PUSH_OBJ_PNT {0x19} inline: 2184 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #89 NewLine, code offs: 607 
PUSH_OBJ_PNT {0x19} offs: 12 ( BYTE_ARR1 ) type: 32 
COPY_TO_gARRAY {0x25} offs: 48 ( VAR_ARR2 )
DBG {0x1} #90 NewLine, code offs: 617 
DBG #90 cmd PRINT_LN , code offs: 617 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #90 Part 8 , code offs: 621 
PUSH_OBJ_PNT {0x19} offs: 237 type: 96 ( #90_arr39 )
DBG #90 Part 8 , code offs: 625 
PUSH_OBJ_PNT {0x19} offs: 48 ( VAR_ARR2 ) type: 16 
DBG #90 Part 8 , code offs: 629 
PUSH_OBJ_PNT {0x19} inline: 2184 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #92 NewLine, code offs: 638 
PUSH_NUM {0x18} 12345 
PUSH INV {0xF} (NUM) 12345 
POP_VAR {0x1F} offs: 53 ( VAR_ARR2 )
DBG {0x1} #93 NewLine, code offs: 650 
DBG #93 cmd PRINT_LN , code offs: 650 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #93 Part 8 , code offs: 654 
PUSH_OBJ_PNT {0x19} offs: 257 type: 96 ( #93_arr42 )
DBG #93 Part 8 , code offs: 658 
PUSH_OBJ_PNT {0x19} offs: 48 ( VAR_ARR2 ) type: 16 
DBG #93 Part 8 , code offs: 662 
PUSH_OBJ_PNT {0x19} inline: 2184 type: 0 
CALL_INT_PROC {0x26} 2 
DBG {0x1} #95 NewLine, code offs: 671 
DBG #95 cmd PRINT , code offs: 671 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #95 Part 8 , code offs: 675 
PUSH_OBJ_PNT {0x19} offs: 280 type: 96 ( #95_arr35 )
DBG #95 Part 8 , code offs: 679 
PUSH_NUM {0x18} 2 
PUSH_NUM {0x18} 8 
CALL_PRG_FUNC {0x28} offset: 93 
DBG #95 Part 2 , code offs: 692 
PUSH_OBJ_PNT {0x19} offs: 299 type: 96 ( #95_arr48 )
DBG #95 Part 8 , code offs: 696 
PUSH_OBJ_PNT {0x19} inline: 34856 type: 0 
CALL_INT_PROC {0x26} 1 
DBG {0x1} #97 NewLine, code offs: 705 
PUSH_NUM {0x18} 2 
PUSH_NUM {0x18} 8 
CALL_PRG_FUNC {0x28} offset: 167 
POP_VAR {0x1F} offs: 61 ( SINGLE_VAR1 )
DBG {0x1} #98 NewLine, code offs: 724 
DBG #98 cmd PRINT_LN , code offs: 724 
PUSH_OBJ_PNT {0x19} offs: 0 type: 96 ( CNT_TEXT )
DBG #98 Part 8 , code offs: 728 
PUSH_OBJ_PNT {0x19} offs: 301 type: 96 ( #98_arr33 )
DBG #98 Part 8 , code offs: 732 
PUSH_VAR {0x17} offs: 61 ( SINGLE_VAR1 )
DBG #98 Part 2 , code offs: 735 
PUSH_OBJ_PNT {0x19} inline: 2178 type: 0 
CALL_INT_PROC {0x26} 2 
END {0x3} 